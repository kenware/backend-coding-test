{
  "swagger": "2.0",
  "info": {
    "description": "This is a rider documentation. It describes all the action that can be performed on the rider API. This include the location covered during a ride.",
    "version": "1.0.0",
    "title": "Rider Documentation",
    "termsOfService": "http://localhost:8081",
    "contact": {
      "email": "kevin@rider.io"
    }
  },
  "host": "rider.io",
  "basePath": "/",
  "tags": [
    {
      "name": "Ride",
      "description": "Rides endpoints: POST, GET, DELETE"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/rides": {
      "post": {
        "tags": [
          "Ride"
        ],
        "summary": "Add a new ride",
        "description": "",
        "operationId": "addRide",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Ride object that need to be saved",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ride"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesful response",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "500": {
            "description": "server error",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Ride"
        ],
        "summary": "Get all the available rides",
        "description": "",
        "operationId": "getRides",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Succesful response",
            "schema": {
              "$ref": "#/definitions/ApiListResponse"
            }
          },
          "404": {
            "description": "Rides not found",
            "schema": {
              "$ref": "#/definitions/NotFoundResponse"
            }
          },
          "500": {
            "description": "server error",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    },
    "/rides/{id}/": {
      "get": {
        "tags": [
          "Ride"
        ],
        "summary": "get a ride",
        "description": "",
        "operationId": "getSingleRide",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of ride",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesful response",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "404": {
            "description": "Rides not found",
            "schema": {
              "$ref": "#/definitions/NotFoundResponse"
            }
          },
          "500": {
            "description": "server error",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Ride": {
      "type": "object",
      "required": [
        "start_lat",
        "start_long",
        "end_lat",
        "end_long",
        "rider_name",
        "driver_name",
        "driver_vehicle"
      ],
      "properties": {
        "start_lat": {
          "type": "integer",
          "example": -50
        },
        "start_long": {
          "type": "integer",
          "example": 90
        },
        "end_lat": {
          "type": "integer",
          "example": -20
        },
        "end_long": {
          "type": "integer",
          "example": 140
        },
        "rider_name": {
          "type": "string",
          "example": "kevin"
        },
        "driver_name": {
          "type": "string",
          "example": "kevin"
        },
        "driver_vehicle": {
          "type": "string",
          "example": "kevin"
        }
      }
    },
    "BadResponse": {
      "type": "object",
      "properties": {
        "error_code": {
          "type": "string",
          "example": "VALIDATION_ERROR"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ServerErrorResponse": {
      "type": "object",
      "properties": {
        "error_code": {
          "type": "string",
          "example": "SERVER_ERROR"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "NotFoundResponse": {
      "type": "object",
      "properties": {
        "error_code": {
          "type": "string",
          "example": "RIDES_NOT_FOUND_ERROR"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ApiListResponse": {
      "type": "array",
      "items": {
        "example": {
          "start_lat": -50,
          "start_long": 90,
          "end_lat": -20,
          "end_long": 140,
          "rider_name": "kevin",
          "driver_name": "kevin",
          "driver_vehicle": "kevin"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "start_lat": {
          "type": "integer",
          "example": -50
        },
        "start_long": {
          "type": "integer",
          "example": 90
        },
        "end_lat": {
          "type": "integer",
          "example": -20
        },
        "end_long": {
          "type": "integer",
          "example": 140
        },
        "rider_name": {
          "type": "string",
          "example": "kevin"
        },
        "driver_name": {
          "type": "string",
          "example": "kevin"
        },
        "driver_vehicle": {
          "type": "string",
          "example": "kevin"
        }
      }
    }
  }
}